// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc3566.MecanumDriveJan21;

import org.usfirst.frc3566.MecanumDriveJan21.commands.*;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;
import edu.wpi.first.wpilibj.Joystick;
import edu.wpi.first.wpilibj.buttons.JoystickButton;

import org.usfirst.frc3566.MecanumDriveJan21.subsystems.*;


/**
 * This class is the glue that binds the controls on the physical operator
 * interface to the commands and command groups that allow control of the robot.
 */
public class OI {


    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    public Joystick joystick1;
    public static double slowDownValue;
    public static JoystickButton hopeMailMoves;
    public static JoystickButton hopeMailMovesOpp;
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public OI() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS

        joystick1 = new Joystick(0);
        hopeMailMoves = new JoystickButton(joystick1, 1);
        hopeMailMoves.whileHeld(new moveMailBox(true));

        hopeMailMovesOpp = new JoystickButton(joystick1, 2);
        hopeMailMovesOpp.whileHeld(new moveMailBox(false));
        
        // SmartDashboard Buttons
        SmartDashboard.putData("AutoLiftFront", new AutonomousLiftFront());

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS
    public Joystick getJoystick1() {
        return joystick1;
    }

    public double getStraight(){
    	//on large robot logitech dual action, this axis is the y axis, axis 1
    	return joystick1.getRawAxis(1) * slowDownValue;
    }
    
    public double getSideWays(){
    	return joystick1.getRawAxis(0) * -1 * slowDownValue;
    }
    
    public double getRotation(){
    	return joystick1.getRawAxis(2) * slowDownValue;
    }
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS
}

